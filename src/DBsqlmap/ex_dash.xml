<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
                "http://ibatis.apache.org/dtd/sql-map-2.dtd">



<!-- typeAlias태그는 type에 선언된 클래스 파일을 짧은이름으로 치환해 주는 역할을 합니다. 즉 bean.User란 java파일을 
	이 xml에서는 User란 이름으로 사용하겠다는 뜻입니다 -->
<!-- <typeAlias alias="User" type="bean.User"/> 당연히 우리가 만든 클래스가 아니여도 별명을 
	지어줄 수 있습니다!!! <typeAlias alias="String" type="java.lang.String"/> -->
<!-- 실제 사용할 쿼리 문입니다. select 시에는 select, delete 시에는 delete update 시에는 update 
	태그를 사용하여 쿼리문을 생성합니다. 이때 id는 필수 요소 입니다. 이 아이디를 통해 쿼리문을 접근할 수 있습니다. resultClass="Board" 
	는 아래 쿼리문을 통해 select된 데이터를 Board 클래스에 자동으로 저장하겠다는 뜻이고, 이 Board클래스는 상단의 typeAlias를 
	통해 alias시킨 것임으로 결국 IbatisBoardVO에 자동으로 저장될 것입니다. parameterClass 데이터를 입력받고 
	리턴할 클래스를 정함. -->
<!-- SQL쿼리를 구분할 id값 결과값의 타입 전달인자 타입(위에 <typeAlias에서 지어준 별명으로 타입명 설정 가능!!) -->






<!--  Ex_dash.xml 파일 설정 -->
<sqlMap namespace="IbatisEx_dash">

<!-- 자바빈 설정. -->
	<typeAlias alias="Ex_postdto" type="bean.Ex_postDto"/>
	
	<!-- ex_post에서 글 수정 -->
	<update id="ex_update"  parameterClass="Ex_postDto">
		UPDATE 	
				ex_post
		SET 	subject =#subject#, content = #content#
		WHERE   num = #num#
	</update>	
	
	<!-- ex_post에서 글 삭제-->
	<typeAlias alias="Ex_postdto" type="bean.Ex_postDto" />
		<delete id="ex_delete" parameterClass="java.lang.Integer">
		DELETE FROM 
				 	ex_post
		WHERE num = #num#
		</delete>
	
	<!-- ex_post에서 글 읽기-->
	<select id="ex_read" resultClass="Ex_postdto" parameterClass="java.lang.Integer">
		SELECT
				num, subject, content, regdate
		FROM
				ex_post
		where  num=#num#
	</select>

	<!-- exercise_board 글 뿌려주기-->
	<select id="ex_listPage" resultClass="Ex_postdto" parameterClass="String">
 		SELECT
				num, subject, content, regdate
		FROM
				ex_post
		WHERE
		 Id=#id#
		ORDER BY regdate desc
	</select>

	<!-- ex_post에서 글 작성 -->
	<typeAlias alias="Ex_post" type="bean.Ex_postDto" />
		<insert id="ex_postInsert" parameterClass="Ex_post">
			insert into
				ex_post (Id ,subject,content,regdate)
				values(#id#, #subject#,#content#,now())
		</insert>
	
	<!-- ex_post에서 해당아이디 운동목록 뿌려주기-->
	<typeAlias alias="Excercise_plan" type="bean.User_excercise_plan" />
		<select id="ex_selfcheck" resultClass="Excercise_plan" parameterClass="String">
		SELECT
				*
		FROM
				user_excercise_plan
		WHERE
				userId = #id#
		</select>


<!--  month 형태는 -1- 이런 방식으로 입력 -->
		<select id="ex_getUser_excercise_plan_userId_month" parameterClass="java.lang.String"  resultClass="Excercise_plan">
			
			select * from user_excercise_plan
			where userId=#userId#  
			order by Regdate asc
		
		</select>

<!-- idx에 의한 값구하기 -->
		<select id="ex_getUser_excercise_plan_idx" parameterClass="java.lang.String"  resultClass="Excercise_plan">
			
			select * from user_excercise_plan
			where idx=#idx#
			order by Regdate asc
		
		</select>


	<typeAlias type="bean.User_excercise_plan" alias="Excercise_plan"/>

	<!--  상호형 작성  캐러셀 용 -->
<!-- 	
<select parameterClass="java.lang.String" id="ex_selfcheck" resultClass="Excercise_plan">
	
	 SELECT *
	  
	  FROM user_excercise_plan 
	  
	  where userId=#userId# 
	  
	  order by Regdate asc
	 </select> -->
	
	
	
	
	
	</sqlMap>
	
	
	
	
















